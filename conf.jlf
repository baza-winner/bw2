
!portRange = 1024..65535

!portDef = ^{
  type Int
  range ($portRange()
}

!portsDef = ^{
  type Map
  elemDef ($portDef)
}

!ports = {
  ports $portsDef
}

!github = github.com:baza-winner
!gitExt = .git
!gitOrigin = \($github)/\(*..|projName)\($gitExt)

!projectsDef = ^{
  type [Map]
  elemDef {
    type Map
    keysDef {
      projShortcut {
        type String
        default (*..|$Key)
      }
      gitOrigin {
        type String
        default ($gitOrigin)
      }
      branch {
        type String
        default develop
      }
    }
  }
}

!servicesDef = ^{
  type [ArrayOf]
  elemDef {
    type Map
    keysDef $ports
  }
  keysDef {
    nginx {
      type Map
      keysDef ($ports + {
        upstream? ($portDef?)
      })
    }
  }
}

!^ {
  type Map
  keysDef {
    portRange Range
    projects ($projectsDef)
    services $servicesDef
  }
}

{

  portRange ($proj.conf.def|portRange)
  projects {
    dip {
      projName dip2
      branch develop
    }
    agate {
      projName agate
      branch develop
    }
  }
  services {
    ssh {
      ports {
        _ 2200
      }
    }
    nginx {
      ports {
        http 8000
        https 4400
      }
      upstream 3000
    }
    mysql {
      ports {
        _ 3300
      }
    }
    redis {
      ports {
        _ 6300
        webdis 7300
      }
    }
    rabbitmq {
      ports {
        _ 5600
        rabbitmq-management 15600
      }
    }
  }
  ports (*services[][ports][]{
    type Map
    key (
      ($_|$Key) == "_" ?
        ($_|$Key) :
        ($_|..|..|$Key)
    )
    elem {
      type String
      value ($_|$Value)
    }
  })
}
